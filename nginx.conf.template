#
#   @e53e04ac/ipp5-frontend-builder/nginx.conf.template
#   Copyright (C) @e53e04ac
#   MIT License
#

worker_processes auto;

events {
    worker_connections 1024;
}

http {
    
    tcp_nopush on;
    server_tokens off;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
        
        listen $${containerAppPort};
        server_name _;
        
        error_page 400 = /400;
        error_page 401 = /401;
        error_page 403 = /403;
        error_page 404 = /404;
        error_page 405 = /405;
        error_page 406 = /406;
        error_page 407 = /407;
        error_page 408 = /408;
        error_page 409 = /409;
        error_page 410 = /410;
        error_page 411 = /411;
        error_page 412 = /412;
        error_page 413 = /413;
        error_page 414 = /414;
        error_page 415 = /415;
        error_page 416 = /416;
        error_page 417 = /417;
        error_page 421 = /421;
        error_page 425 = /425;
        error_page 426 = /426;
        error_page 428 = /428;
        error_page 429 = /429;
        error_page 431 = /431;
        error_page 500 = /500;
        error_page 501 = /501;
        error_page 502 = /502;
        error_page 503 = /503;
        error_page 504 = /504;
        error_page 505 = /505;
        error_page 510 = /510;
        error_page 511 = /511;
        
        location = /400 { internal; return 400 "400 Bad Request"; }
        location = /401 { internal; return 401 "401 Unauthorized"; }
        location = /403 { internal; return 403 "403 Forbidden"; }
        location = /404 { internal; return 404 "404 Not Found"; }
        location = /405 { internal; return 405 "405 Method Not Allowed"; }
        location = /406 { internal; return 406 "406 Not Acceptable"; }
        location = /407 { internal; return 407 "407 Proxy Authentication Required"; }
        location = /408 { internal; return 408 "408 Request Timeout"; }
        location = /409 { internal; return 409 "409 Conflict"; }
        location = /410 { internal; return 410 "410 Gone"; }
        location = /411 { internal; return 411 "411 Length Required"; }
        location = /412 { internal; return 412 "412 Precondition Failed"; }
        location = /413 { internal; return 413 "413 Request Entity Too Large"; }
        location = /414 { internal; return 414 "414 Request-URI Too Long"; }
        location = /415 { internal; return 415 "415 Unsupported Media Type"; }
        location = /416 { internal; return 416 "416 Requested Range Not Satisfiable"; }
        location = /417 { internal; return 417 "417 Expectation Failed"; }
        location = /421 { internal; return 421 "421 Misdirected Request"; }
        location = /425 { internal; return 425 "425 Too Early"; }
        location = /426 { internal; return 426 "426 Upgrade Required"; }
        location = /428 { internal; return 428 "428 Precondition Required"; }
        location = /429 { internal; return 429 "429 Too Many Requests"; }
        location = /431 { internal; return 431 "431 Request Header Fields Too Large"; }
        location = /500 { internal; return 500 "500 Internal Server Error"; }
        location = /501 { internal; return 501 "501 Not Implemented"; }
        location = /502 { internal; return 502 "502 Bad Gateway"; }
        location = /503 { internal; return 503 "503 Service Unavailable"; }
        location = /504 { internal; return 504 "504 Gateway Timeout"; }
        location = /505 { internal; return 505 "505 HTTP Version Not Supported"; }
        location = /510 { internal; return 510 "510 Not Extended"; }
        location = /511 { internal; return 511 "511 Network Authentication Required"; }
        
        gzip on;
        gzip_types application/javascript application/json text/css text/plain;
        gzip_proxied no-cache no-store private expired auth;
        
        proxy_http_version 1.1;
        proxy_set_header "X-Real-IP" $remote_addr;
        proxy_set_header "X-Forwarded-Proto" $scheme;
        proxy_set_header "X-Forwarded-Host" $host;
        proxy_set_header "X-Forwarded-Server" $host;
        proxy_set_header "X-Forwarded-For" $remote_addr;
        
        proxy_intercept_errors on;
        
        proxy_hide_header "x-powered-by";
        
        add_header "Cache-Control" "no-cache";
        add_header "Referrer-Policy" "strict-origin";
        add_header "Strict-Transport-Security" "max-age=31536000; ";
        add_header "X-Content-Type-Options" "nosniff";
        add_header "X-Frame-Options" "SAMEORIGIN";
        add_header "X-XSS-Protection" "1; mode=block";
        
        location = /healthcheck {
            return 200 "200 OK";
        }
        
        location = /favicon.ico {
            empty_gif;
            break;
        }
        
        location $${backendBatchHttpPathPrefix} {
            proxy_pass $${backendBatchUrl};
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
        
        location $${backendApiHttpPathPrefix} {
            proxy_pass $${backendApiUrl};
        }
        
        location $${backendIdpHttpPathPrefix} {
            proxy_pass $${backendIdpUrl};
        }
        
        location $${backendStaticHttpPathPrefix} {
            proxy_pass $${backendStaticUrl};
        }
        
        location / {
            return 403;
        }
        
    }
    
}
